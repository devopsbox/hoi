// Copyright 2016 Atelier Disko. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package project

import (
	"errors"
	"fmt"
	"path/filepath"
)

const WWW_KEEP string = "keep"
const WWW_DROP string = "drop"
const WWW_ADD string = "add"

type DomainDirective struct {
	// required; always the naked domain name/FQDN.
	FQDN string
	// optional; either "keep", "drop" or "add"; defaults to "drop".
	WWW string
	// optional; by default not enabled
	SSL SSLDirective
	// optional; by default not enabled
	Auth AuthDirective
	// optional; by default empty
	Aliases []string
	// optional; by default empty
	Redirects []string
}

// TODO Allows special value "derived" where the User is taken
// from the project name. acme_stage -> acme, acme -> acme, acme_shop -> acme
const USER_DERIVED string = "!derived"

// TODO Allows special value "autogenerate" where an unsafe password
// is generated and mailed to the administrator.
const PASSWORD_AUTOGEN string = "!autogenerated"

// Auth is considered enabled, once a value for User is given. Empty
// passwords are not allowed.
type AuthDirective struct {
	User     string
	Password string
}

func (drv AuthDirective) IsEnabled() bool {
	return drv.User != ""
}
